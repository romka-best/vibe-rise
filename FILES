"use client"

import * as React from "react"
import { useReveal } from "@/components/viberise/hooks/use-reveal"
import { cn } from "@/lib/utils"
import { RandomCorpLogo } from "../visuals/random-corp-logo"
import { ArrowRight, ArrowDown } from 'lucide-react'

export function Problem() {
  const { ref, revealed } = useReveal()
  const seed = React.useMemo(() => Math.random(), [])

  return (
    <section id="problem" className="border-t border-black/10 dark:border-white/10 vh-section">
      <div className="container mx-auto min-h-full px-4 flex items-center">
        <div className="w-full">
          <div
            className={cn(
              "mx-auto max-w-3xl text-center transition-all duration-500",
              revealed ? "opacity-100 translate-y-0" : "opacity-0 translate-y-3",
            )}
            ref={ref}
          >
            <h2 className="text-3xl md:text-4xl font-bold">{"Companies Don‚Äôt Create. People Do."}</h2>
            <p className="mt-3 text-lg text-black/70 dark:text-white/70">
              {"You can only invest in the company, not the person ‚Äî yet."}
            </p>
          </div>

          <div className="mt-10 grid items-center gap-6 md:grid-cols-[1fr_auto_1fr]">
            {/* Company */}
            <div className="relative rounded-3xl border border-black/10 bg-white/70 p-6 dark:border-white/10 dark:bg-black/40">
              <div className="flex items-center justify-between">
                <span className="text-sm font-semibold tracking-wide text-black/70 dark:text-white/70">{"Company"}</span>
                <span
                  role="img"
                  aria-label="Company"
                  className="inline-flex h-8 w-8 items-center justify-center rounded-full bg-white/70 text-base ring-1 ring-black/10 dark:bg-white/10 dark:ring-white/10"
                >
                  {"üè¢"}
                </span>
              </div>
              <div className="mt-4 flex items-center justify-center">
                <RandomCorpLogo
                  seed={seed}
                  size={200}
                  aria-label="Abstract muted corporate logo"
                  title="Abstract corporate mark"
                  className="rounded-2xl"
                />
              </div>
              <ul className="mx-auto mt-4 grid max-w-sm list-disc gap-1 pl-5 text-sm text-black/70 dark:text-white/70">
                <li>{"Brand-first, emotionless"}</li>
                <li>{"Investable today"}</li>
                <li>{"Results represent people‚Äôs work"}</li>
              </ul>
            </div>

            {/* Gap (desktop) */}
            <div className="hidden md:flex relative h-full w-full min-w-[140px] items-center justify-center px-2">
              <div className="absolute inset-y-8 left-1/2 w-[2px] -translate-x-1/2 bg-[rgba(204,255,17,0.9)] shadow-[0_0_18px_rgba(204,255,17,0.8)]" />
              <div className="gap-badge pointer-events-none">
                <div className="rounded-full bg-[var(--brand)] px-3 py-1 text-xs font-bold text-black shadow ring-1 ring-[rgba(204,255,17,0.6)]">
                  {"The gap we‚Äôre closing"}
                </div>
              </div>
              <ArrowDown className="arrow-vert mt-2 h-5 w-5 text-[var(--brand)] opacity-90" />
            </div>

            {/* Talent */}
            <div className="relative overflow-hidden rounded-3xl border border-black/10 bg-white/70 p-6 dark:border-white/10 dark:bg-black/40">
              <span className="text-sm font-semibold tracking-wide text-black/70 dark:text-white/70">{"Talent"}</span>
              <div className="mt-4 relative aspect-[4/3] w-full overflow-hidden rounded-2xl ring-1 ring-[rgba(204,255,17,0.25)] shadow-[0_0_40px_rgba(204,255,17,0.18)]">
                {/* eslint-disable-next-line @next/next/no-img-element */}
                <img
                  src="/neon-talent-portrait.png"
                  alt="Vibrant, energetic person portrait"
                  width={1200}
                  height={900}
                  className="h-full w-full object-cover"
                />
                <div className="pointer-events-none absolute inset-0 bg-[radial-gradient(60%_60%_at_70%_30%,rgba(204,255,17,0.20),transparent_60%)]" />
              </div>
              <ul className="mx-auto mt-4 grid max-w-sm list-disc gap-1 pl-5 text-sm text-black/70 dark:text-white/70">
                <li>{"Human-first, energetic"}</li>
                <li>{"Invest directly in potential"}</li>
                <li>{"Share upside as they grow"}</li>
              </ul>
            </div>

            {/* Gap (mobile) */}
            <div className="md:hidden col-span-1">
              <div className="mt-2 flex flex-col items-center justify-center gap-2">
                <div className="rounded-full bg-[var(--brand)] px-3 py-1 text-xs font-bold text-black shadow ring-1 ring-[rgba(204,255,17,0.6)]">
                  {"The gap we‚Äôre closing"}
                </div>
                <div className="flex items-center gap-2">
                  <ArrowRight className="arrow-horiz h-5 w-5 text-[var(--brand)] opacity-90" />
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>

      <style jsx>{`
        :root {
          --brand: #CCFF11;
        }
        .gap-badge {
          position: absolute;
          top: 50%;
          transform: translateY(-50%);
        }
        @keyframes arrowPulseY {
          0%,
          100% {
            transform: translateY(0);
            opacity: 0.9;
          }
          50% {
            transform: translateY(8px);
            opacity: 1;
          }
        }
        @keyframes arrowPulseX {
          0%,
          100% {
            transform: translateX(0);
            opacity: 0.9;
          }
          50% {
            transform: translateX(8px);
            opacity: 1;
          }
        }
        .arrow-vert {
          animation: arrowPulseY 1.8s ease-in-out infinite;
          filter: drop-shadow(0 0 10px rgba(204, 255, 17, 0.7));
        }
        .arrow-horiz {
          animation: arrowPulseX 1.8s ease-in-out infinite;
          filter: drop-shadow(0 0 10px rgba(204, 255, 17, 0.7));
        }
        @media (prefers-reduced-motion: reduce) {
          .arrow-vert,
          .arrow-horiz {
            animation: none !important;
          }
        }
      `}</style>
    </section>
  )
}

import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
import { Rocket, LineChart, Users, Timer, ShieldCheck, BadgeDollarSign, ArrowRight } from 'lucide-react'
import Link from "next/link"
import { Button } from "@/components/ui/button"

export function Solution() {
  const items = [
    { title: "Launch Your Personal IPO", desc: "Anyone can issue their tokens and raise capital.", icon: Rocket },
    { title: "Invest in Potential", desc: "Buy tokens of people with a high chance to win.", icon: LineChart },
    { title: "Grow Together", desc: "Earn when they achieve milestones and success.", icon: Users },
  ] as const

  const metrics = [
    { icon: Timer, label: "Time to launch", value: "< 24h" },
    { icon: BadgeDollarSign, label: "Fees", value: "Low & transparent" },
    { icon: ShieldCheck, label: "Compliance", value: "Designed-in" },
  ] as const

  return (
    <section id="solution" className="border-t border-black/10 dark:border-white/10 vh-section">
      <div className="container mx-auto min-h-full px-4 flex items-center">
        <div className="w-full">
          <h2 className="text-3xl md:text-4xl font-bold">{"A Marketplace Where Human Potential Is the Asset."}</h2>

          <div className="mt-8 grid gap-6 sm:grid-cols-2 lg:grid-cols-3">
            {items.map((item) {
              const Icon = item.icon
              return (
                <Card
                  key={item.title}
                  className="group border-black/10 dark:border-white/10 bg-white/60 dark:bg-black/40"
                >
                  <CardHeader>
                    <div className="flex items-center gap-3">
                      <span className="inline-flex h-10 w-10 items-center justify-center rounded-full bg-[color:rgba(204,255,17,0.15)] ring-1 ring-[rgba(204,255,17,0.3)]">
                        <Icon className="h-5 w-5 text-[var(--brand)]" />
                      </span>
                      <CardTitle>{item.title}</CardTitle>
                    </div>
                  </CardHeader>
                  <CardContent>
                    <p className="text-black/70 dark:text-white/70">{item.desc}</p>
                  </CardContent>
                </Card>
              )
            })}
          </div>

          <div className="mt-8 grid gap-4 sm:grid-cols-3">
            {metrics.map((m) {
              const Icon = m.icon
              return (
                <div
                  key={m.label}
                  className="flex items-center gap-3 rounded-2xl border border-black/10 bg-white/60 p-4 dark:border-white/10 dark:bg-black/40"
                >
                  <span className="inline-flex h-9 w-9 items-center justify-center rounded-full bg-[rgba(204,255,17,0.15)] ring-1 ring-[rgba(204,255,17,0.3)]">
                    <Icon className="h-4 w-4 text-[var(--brand)]" />
                  </span>
                  <div>
                    <div className="text-sm text-black/60 dark:text-white/60">{m.label}</div>
                    <div className="font-semibold">{m.value}</div>
                  </div>
                </div>
              )
            })}
          </div>

          <div className="mt-10 rounded-2xl border border-black/10 bg-white/60 px-5 py-4 dark:border-white/10 dark:bg-black/40">
            <div className="flex flex-col items-start justify-between gap-3 sm:flex-row sm:items-center">
              <div className="max-w-2xl">
                <p className="font-medium">
                  {"Ready to build with us? Join the waitlist and be first to know when creators launch."}
                </p>
              </div>
              <Link href="#waitlist" className="inline-flex">
                <Button className="bg-[var(--brand)] text-black hover:bg-[color:rgb(204,255,17,0.9)]">
                  {"Join Waitlist"}
                  <ArrowRight className="ml-2 h-4 w-4" />
                </Button>
              </Link>
            </div>
          </div>
        </div>
      </div>
    </section>
  )
}

import { MarketChart } from "../visuals/market-chart"

export function HowItWorks() {
  const steps = [
    { title: "Create & Launch", desc: "Talent creates a profile and issues tokens." },
    { title: "Invest & Support", desc: "Investors buy tokens and help the growth." },
    { title: "Rise & Profit", desc: "Token price grows, dividends are distributed." },
  ] as const

  return (
    <section id="how-it-works" className="border-t border-black/10 dark:border-white/10 vh-section">
      <div className="container mx-auto min-h-full px-4 flex items-center">
        <div className="w-full">
          <div className="grid gap-8 md:grid-cols-3">
            {steps.map((s, i) (
              <div
                key={s.title}
                className="relative rounded-2xl border border-black/10 p-6 dark:border-white/10 bg-white/60 dark:bg-black/40"
              >
                <div className="absolute -top-3 left-6 rounded-full bg-[var(--brand)] px-3 py-1 text-xs font-bold text-black shadow">
                  {String(i + 1).padStart(2, "0")}
                </div>
                <h3 className="text-xl font-semibold">{s.title}</h3>
                <p className="mt-2 text-black/70 dark:text-white/70">{s.desc}</p>
              </div>
            ))}
          </div>

          <div className="mt-10">
            <MarketChart />
          </div>
        </div>
      </div>
    </section>
  )
}

import { Card, CardContent } from "@/components/ui/card"
import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar"

export function ForWhom() {
  const items = [
    { title: "For Talents", desc: "Access capital without loans or middlemen." },
    { title: "For Investors", desc: "A new asset class with high upside potential." },
    { title: "For Fans", desc: "Back people you believe in ‚Äî and share the upside." },
  ] as const

  const quotes = [
    {
      name: "Alex P.",
      role: "Indie Game Dev",
      quote: "I turned community belief into runway without giving up control.",
      img: "/indie-dev-portrait.png",
      init: "AP",
    },
    {
      name: "Maya K.",
      role: "Angel Investor",
      quote: "Backed 5 people early. Seeing measurable upside as they hit milestones.",
      img: "/thoughtful-investor.png",
      init: "MK",
    },
  ] as const

  return (
    <section id="for-whom" className="border-t border-black/10 dark:border-white/10 vh-section">
      <div className="container mx-auto min-h-full px-4 flex items-center">
        <div className="w-full">
          <h2 className="text-3xl md:text-4xl font-bold">{"Designed for Talents. Built for Investors."}</h2>

          <div className="mt-8 grid gap-6 md:grid-cols-3">
            {items.map((it) (
              <div
                key={it.title}
                className="rounded-2xl border border-black/10 bg-white/60 p-6 shadow-sm transition hover:shadow-[0_8px_40px_rgba(204,255,17,0.12)] dark:border-white/10 dark:bg-black/40"
              >
                <h3 className="text-xl font-semibold">{it.title}</h3>
                <p className="mt-2 text-black/70 dark:text-white/70">{it.desc}</p>
              </div>
            ))}
          </div>

          <div className="mt-10 grid gap-6 md:grid-cols-2">
            {quotes.map((q) (
              <Card key={q.name} className="border-black/10 bg-white/60 dark:border-white/10 dark:bg-black/40">
                <CardContent className="p-6">
                  <div className="flex items-center gap-3">
                    <Avatar>
                      <AvatarImage src={q.img || "/placeholder.svg"} alt={`${q.name} avatar`} />
                      <AvatarFallback>{q.init}</AvatarFallback>
                    </Avatar>
                    <div>
                      <div className="font-semibold">{q.name}</div>
                      <div className="text-xs text-black/60 dark:text-white/60">{q.role}</div>
                    </div>
                  </div>
                  <p className="mt-4 text-black/80 dark:text-white/80">&ldquo;{q.quote}&rdquo;</p>
                </CardContent>
              </Card>
            ))}
          </div>
        </div>
      </div>
    </section>
  )
}

import { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from "@/components/ui/accordion"
import { Button } from "@/components/ui/button"
import { MessageCircleQuestion, Mail, LifeBuoy } from 'lucide-react'
import Link from "next/link"

export function FAQ() {
  const items = [
    { q: "What is VibeRise?", a: "A marketplace where human potential is the asset you can invest in." },
    { q: "How do tokens work?", a: "Tokens represent a stake in a person's potential and future earnings." },
    { q: "Is this compliant?", a: "We‚Äôre designing with compliance top-of-mind and will share more soon." },
  ] as const

  return (
    <section id="faq" className="border-t border-black/10 dark:border-white/10 vh-section">
      <div className="container mx-auto min-h-full px-4 flex items-center">
        <div className="w-full">
          <h2 className="text-3xl md:text-4xl font-bold">{"FAQ"}</h2>

          <div className="mt-6">
            <Accordion type="single" collapsible className="w-full">
              {items.map((qa, i) (
                <AccordionItem key={qa.q} value={`item-${i}`}>
                  <AccordionTrigger>{qa.q}</AccordionTrigger>
                  <AccordionContent className="text-black/70 dark:text-white/70">{qa.a}</AccordionContent>
                </AccordionItem>
              ))}
            </Accordion>
          </div>

          <div className="mt-10 rounded-2xl border border-black/10 bg-white/60 p-6 dark:border-white/10 dark:bg-black/40">
            <div className="flex flex-col gap-3 sm:flex-row sm:items-center sm:justify-between">
              <div className="flex items-start gap-3">
                <span className="inline-flex h-9 w-9 items-center justify-center rounded-full bg-[rgba(204,255,17,0.15)] ring-1 ring-[rgba(204,255,17,0.3)]">
                  <MessageCircleQuestion className="h-4 w-4 text-[var(--brand)]" />
                </span>
                <div>
                  <div className="font-semibold">{"Still have questions?"}</div>
                  <p className="text-sm text-black/70 dark:text-white/70">
                    {"Reach out or join the waitlist ‚Äî we‚Äôll keep you posted as we launch."}
                  </p>
                </div>
              </div>
              <div className="flex gap-2">
                <a href="mailto:hello@viberise.app" className="inline-flex">
                  <Button
                    variant="outline"
                    className="border-black/15 bg-white/60 hover:bg-white/80 dark:border-white/15 dark:bg-white/10"
                  >
                    <Mail className="mr-2 h-4 w-4" />
                    {"Email us"}
                  </Button>
                </a>
                <Link href="#waitlist" className="inline-flex">
                  <Button className="bg-[var(--brand)] text-black hover:bg-[color:rgb(204,255,17,0.9)]">
                    <LifeBuoy className="mr-2 h-4 w-4" />
                    {"Join Waitlist"}
                  </Button>
                </Link>
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>
  )
}

"use client"

import * as React from "react"
import { Button } from "@/components/ui/button"
import { Input } from "@/components/ui/input"
import { CheckCircle2, Users, BellRing } from 'lucide-react'

export interface WaitlistProps {
  role: "investor" | "talent" | "supporter" | null
  setRole: (r: "investor" | "talent" | "supporter") => void
  email: string
  setEmail: (v: string) => void
  onSubmit: (e: React.FormEvent) => void
  emailError: string | null
  submitting: boolean
}

export function Waitlist({ role, setRole, email, setEmail, onSubmit, emailError, submitting }: WaitlistProps) {
  const roles = [
    { key: "investor" as const, label: "Investor", desc: "I want high-growth opportunities", emoji: "üíº" },
    { key: "talent" as const, label: "Talent", desc: "I need capital to rise", emoji: "üöÄ" },
    { key: "supporter" as const, label: "Supporter", desc: "I want to back people I believe in", emoji: "‚ù§Ô∏è" },
  ]

  const [count, setCount] = React.useState<number | null>(null)
  React.useEffect(() => {
    let mounted = true
    fetch("/api/waitlist", { method: "GET", cache: "no-store" })
      .then((r) => r.json())
      .then((data) => {
        if (!mounted) return
        const n = typeof data?.count === "number" ? data.count : null
        setCount(n)
      })
      .catch(() => {
        if (!mounted) return
        setCount(null)
      })
    return () => {
      mounted = false
    }
  }, [])

  const perks = [
    { title: "Early access", desc: "Be first to try creator launches.", icon: BellRing },
    { title: "Founder updates", desc: "Insider roadmaps and milestones.", icon: Users },
    { title: "Priority invites", desc: "Beta cohorts and private drops.", icon: CheckCircle2 },
  ] as const

  return (
    <section id="waitlist" className="border-t border-black/10 dark:border-white/10 vh-section">
      <div className="container mx-auto min-h-full px-4 flex items-center">
        <div className="w-full">
          <div className="flex items-center justify-between gap-3">
            <h2 className="text-3xl md:text-4xl font-bold">{"Get In Early. Rise With the Vibe."}</h2>
            {typeof count === "number" && (
              <div
                className="hidden sm:inline-flex items-center gap-2 rounded-full bg-white/70 px-3 py-1 text-xs text-black/80 ring-1 ring-black/10 dark:bg-white/10 dark:text-white/80 dark:ring-white/10"
                aria-live="polite"
              >
                <span className="inline-block h-2 w-2 rounded-full bg-[var(--brand)] shadow-[0_0_8px_rgba(204,255,17,0.8)]" />
                <span className="font-medium">{`Risers so far: ${count}`}</span>
              </div>
            )}
          </div>

          {/* Role select */}
          <div className="mt-6 grid gap-4 sm:grid-cols-3">
            {roles.map((r) {
              const active = role === r.key
              return (
                <button
                  key={r.key}
                  type="button"
                  onClick={() => setRole(r.key)}
                  className={[
                    "text-left rounded-2xl border p-4 transition focus:outline-none focus-visible:ring-4",
                    active
                      ? "border-[rgba(204,255,17,0.5)] bg-[rgba(204,255,17,0.1)] ring-[rgba(204,255,17,0.3)]"
                      : "border-black/10 bg-white/60 hover:border-[rgba(204,255,17,0.4)] dark:border-white/10 dark:bg-black/40",
                  ].join(" ")}
                  aria-pressed={active}
                >
                  <div className="flex items-center gap-3">
                    <span className="text-2xl" aria-hidden="true">
                      {r.emoji}
                    </span>
                    <div>
                      <div className="font-semibold">{r.label}</div>
                      <div className="text-sm text-black/70 dark:text-white/70">{r.desc}</div>
                    </div>
                  </div>
                </button>
              )
            })}
          </div>

          {/* Email form */}
          <form className="mt-6 grid gap-3 sm:grid-cols-[1fr_auto]" onSubmit={onSubmit}>
            <label htmlFor="email" className="sr-only">
              {"Email"}
            </label>
            <Input
              id="email"
              type="email"
              value={email}
              onChange={(e) => setEmail(e.currentTarget.value)}
              placeholder={"Enter your best email ‚Äî we‚Äôll save your seat"}
              className="bg-white/70 dark:bg-black/50"
              aria-invalid={!!emailError}
              aria-describedby={emailError ? "email-err" : undefined}
            />
            <Button
              type="submit"
              disabled={submitting}
              className="bg-[var(--brand)] text-black hover:bg-[color:rgb(204,255,17,0.9)] disabled:opacity-60"
            >
              {submitting ? "Joining..." : "Join the Rise"}
            </Button>
          </form>
          {emailError && (
            <p id="email-err" className="mt-2 text-sm text-red-600 dark:text-red-400">
              {emailError}
            </p>
          )}

          {/* What you‚Äôll get ‚Äì compact perks grid */}
          <div className="mt-8 grid gap-4 sm:grid-cols-3">
            {perks.map((p) {
              const Icon = p.icon
              return (
                <div
                  key={p.title}
                  className="flex items-start gap-3 rounded-2xl border border-black/10 bg-white/60 p-4 dark:border-white/10 dark:bg-black/40"
                >
                  <span className="mt-0.5 inline-flex h-8 w-8 items-center justify-center rounded-full bg-[rgba(204,255,17,0.15)] ring-1 ring-[rgba(204,255,17,0.3)]">
                    <Icon className="h-4 w-4 text-[var(--brand)]" />
                  </span>
                  <div>
                    <div className="font-semibold">{p.title}</div>
                    <div className="text-sm text-black/70 dark:text-white/70">{p.desc}</div>
                  </div>
                </div>
              )
            })}
          </div>
        </div>
      </div>
    </section>
  )
}
